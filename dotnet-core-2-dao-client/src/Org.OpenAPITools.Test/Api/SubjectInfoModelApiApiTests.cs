/* 
 * Femr Core
 *
 * Femr Core
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing SubjectInfoModelApiApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SubjectInfoModelApiApiTests : IDisposable
    {
        private SubjectInfoModelApiApi instance;

        public SubjectInfoModelApiApiTests()
        {
            instance = new SubjectInfoModelApiApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SubjectInfoModelApiApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SubjectInfoModelApiApi
            //Assert.IsType(typeof(SubjectInfoModelApiApi), instance, "instance is a SubjectInfoModelApiApi");
        }

        
        /// <summary>
        /// Test SubjectinfoGet
        /// </summary>
        [Fact]
        public void SubjectinfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetListSchema q = null;
            //var response = instance.SubjectinfoGet(q);
            //Assert.IsType<InlineResponse2006> (response, "response is InlineResponse2006");
        }
        
        /// <summary>
        /// Test SubjectinfoInfoGet
        /// </summary>
        [Fact]
        public void SubjectinfoInfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetInfoSchema q = null;
            //var response = instance.SubjectinfoInfoGet(q);
            //Assert.IsType<InlineResponse2003> (response, "response is InlineResponse2003");
        }
        
        /// <summary>
        /// Test SubjectinfoPkDelete
        /// </summary>
        [Fact]
        public void SubjectinfoPkDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pk = null;
            //var response = instance.SubjectinfoPkDelete(pk);
            //Assert.IsType<InlineResponse404> (response, "response is InlineResponse404");
        }
        
        /// <summary>
        /// Test SubjectinfoPkGet
        /// </summary>
        [Fact]
        public void SubjectinfoPkGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pk = null;
            //GetItemSchema q = null;
            //var response = instance.SubjectinfoPkGet(pk, q);
            //Assert.IsType<InlineResponse2007> (response, "response is InlineResponse2007");
        }
        
        /// <summary>
        /// Test SubjectinfoPkPut
        /// </summary>
        [Fact]
        public void SubjectinfoPkPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int pk = null;
            //SubjectInfoModelApiPut subjectInfoModelApiPut = null;
            //var response = instance.SubjectinfoPkPut(pk, subjectInfoModelApiPut);
            //Assert.IsType<InlineResponse2008> (response, "response is InlineResponse2008");
        }
        
        /// <summary>
        /// Test SubjectinfoPost
        /// </summary>
        [Fact]
        public void SubjectinfoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubjectInfoModelApiPost subjectInfoModelApiPost = null;
            //var response = instance.SubjectinfoPost(subjectInfoModelApiPost);
            //Assert.IsType<InlineResponse2011> (response, "response is InlineResponse2011");
        }
        
    }

}
