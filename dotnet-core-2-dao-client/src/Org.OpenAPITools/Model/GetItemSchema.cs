/* 
 * Femr Core
 *
 * Femr Core
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GetItemSchema
    /// </summary>
    [DataContract]
    public partial class GetItemSchema :  IEquatable<GetItemSchema>, IValidatableObject
    {
        /// <summary>
        /// Defines Keys
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum KeysEnum
        {
            /// <summary>
            /// Enum Showcolumns for value: show_columns
            /// </summary>
            [EnumMember(Value = "show_columns")]
            Showcolumns = 1,

            /// <summary>
            /// Enum Descriptioncolumns for value: description_columns
            /// </summary>
            [EnumMember(Value = "description_columns")]
            Descriptioncolumns = 2,

            /// <summary>
            /// Enum Labelcolumns for value: label_columns
            /// </summary>
            [EnumMember(Value = "label_columns")]
            Labelcolumns = 3,

            /// <summary>
            /// Enum Showtitle for value: show_title
            /// </summary>
            [EnumMember(Value = "show_title")]
            Showtitle = 4,

            /// <summary>
            /// Enum None for value: none
            /// </summary>
            [EnumMember(Value = "none")]
            None = 5

        }


        /// <summary>
        /// Gets or Sets Keys
        /// </summary>
        [DataMember(Name="keys", EmitDefaultValue=false)]
        public List<KeysEnum> Keys { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetItemSchema" /> class.
        /// </summary>
        /// <param name="columns">columns.</param>
        /// <param name="keys">keys.</param>
        public GetItemSchema(List<string> columns = default(List<string>), List<KeysEnum> keys = default(List<KeysEnum>))
        {
            this.Columns = columns;
            this.Keys = keys;
        }
        
        /// <summary>
        /// Gets or Sets Columns
        /// </summary>
        [DataMember(Name="columns", EmitDefaultValue=false)]
        public List<string> Columns { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetItemSchema {\n");
            sb.Append("  Columns: ").Append(Columns).Append("\n");
            sb.Append("  Keys: ").Append(Keys).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetItemSchema);
        }

        /// <summary>
        /// Returns true if GetItemSchema instances are equal
        /// </summary>
        /// <param name="input">Instance of GetItemSchema to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetItemSchema input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Columns == input.Columns ||
                    this.Columns != null &&
                    input.Columns != null &&
                    this.Columns.SequenceEqual(input.Columns)
                ) && 
                (
                    this.Keys == input.Keys ||
                    this.Keys.SequenceEqual(input.Keys)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Columns != null)
                    hashCode = hashCode * 59 + this.Columns.GetHashCode();
                hashCode = hashCode * 59 + this.Keys.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
